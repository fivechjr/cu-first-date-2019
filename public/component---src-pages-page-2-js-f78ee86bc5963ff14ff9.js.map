{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/view.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/common/footer.jsx","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","View","className","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Footer","react_default","view","Date","getFullYear","href","target","Layout","gatsby_browser_entry","footer","_2924840780","node"],"mappings":"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","file":"component---src-pages-page-2-js-f78ee86bc5963ff14ff9.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\n\nconst View = ({ children, className }) => (\n    <div className=\"container\">\n        <div className=\"mx-8 flex justify-center\">\n            <div className=\"w-full md:w-3/4 lg:w-3/5 xl:w-1/2\">\n                <div className={className}>{children}</div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default View\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport View from './view'\n\nconst Footer = () => (\n    <footer className=\"bg-white\">\n        <View className=\"py-10\">\n            <p className=\"text-center font-sans text-2xs uppercase tracking-widest text-gray-600\">\n                <span className=\"border-b pb-1 border-white\">\n                    &copy; {new Date().getFullYear()} CU First Date\n                </span>\n                <span className=\"opacity-50 border-b pb-1 border-white\">\n                    {' '}\n                    &middot;{' '}\n                    <a\n                        href=\"https://github.com/fivechjr\"\n                        className=\"border-b pb-1 text-cu border-cu\"\n                        target=\"_blank\">\n                        Patcharapat Chaijaroen\n                    </a>\n                </span>\n            </p>\n        </View>\n    </footer>\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport '../resources/tailwind.css'\nimport Footer from '../components/common/footer'\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <main className=\"antialiased font-sans\">{children}</main>\n                <Footer />\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired\n}\n\nexport default Layout\n"],"sourceRoot":""}