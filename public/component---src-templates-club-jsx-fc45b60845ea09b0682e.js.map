{"version":3,"sources":["webpack:///./src/components/common/navigation-bar.jsx","webpack:///./src/components/common/image-view.jsx","webpack:///./src/templates/club.jsx","webpack:///./src/components/common/view.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/section-title.jsx","webpack:///./src/components/common/chula-engineering-icon.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.jsx","webpack:///./src/components/common/footer.jsx","webpack:///./src/components/layout.jsx"],"names":["NavigationBar","_ref","pageTitle","react_default","a","createElement","className","view","gatsby_browser_entry","to","index_esm","ImageView","children","PerClubView","pageContext","mainColor","type","toUpperCase","getColor","layout","seo","title","name","navigation_bar","section_title","en","th","icon","chula_engineering_icon","color","dist_default","componentDecorator","href","text","key","target","rel","description","image_view","images","length","map","value","index","classNames","mb-10","src","alt","renderImages","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","View","d","__webpack_exports__","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","Fragment","props","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SectionTitle","style","width","height","ChulaEngineeringIcon","viewBox","version","id","stroke","strokeWidth","fill","fillRule","points","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","Footer","Date","getFullYear","Layout","footer","_2924840780","node"],"mappings":"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","file":"component---src-templates-club-jsx-fc45b60845ea09b0682e.js","sourcesContent":["import React from 'react'\nimport View from './view'\nimport { FaCaretRight } from 'react-icons/fa'\nimport { Link } from 'gatsby'\n\nconst NavigationBar = ({ pageTitle }) => (\n    <header className=\"sticky top-0 py-4 bg-white z-20 bg-white border-b border-gray-200\">\n        <View>\n            <div className=\"w-full flex flex-row justify-start\">\n                <div className=\"flex items-center\">\n                    <Link to=\"/#clubs\">\n                        <div className=\"font-sans flex items-center py-3 mr-2\">\n                            <span className=\"text-black leading-none font-headline text-sm\">\n                                <span>CU Engineering</span>\n                                <span className=\"font-bold\"> Clubs '19</span>\n                            </span>\n                        </div>\n                    </Link>\n                    <div className=\"flex items-center py-3\">\n                        <span className=\"text-2xs text-gray-400\">\n                            <FaCaretRight />\n                        </span>\n                        <span className=\"text-red-600 ml-2 leading-none font-headline text-sm\">\n                            {pageTitle}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </View>\n    </header>\n)\n\nexport default NavigationBar\n","import React from 'react'\n\nconst ImageView = ({ children, className }) => (\n    <div className=\"container\">\n        <div className=\"flex justify-center\">\n            <div className=\"w-full md:w-6/7 xl:w-2/3\">\n                <div className={className}>{children}</div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default ImageView\n","import React from 'react'\nimport Linkify from 'react-linkify'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport NavigationBar from '../components/common/navigation-bar'\nimport View from '../components/common/view'\nimport ImageView from '../components/common/image-view'\nimport SectionTitle from '../components/common/section-title'\nimport classNames from 'classnames'\nimport ChulaEngineeringIcon from '../components/common/chula-engineering-icon'\n// import GatsbyImage from '../components/common/gatsby-image'\n\nconst PerClubView = ({ pageContext }) => {\n    const renderImages = () => {\n        if (pageContext.images && pageContext.images.length > 0) {\n            return pageContext.images.map((value, index) => (\n                <img\n                    key={index}\n                    className={classNames('w-full', {\n                        'mb-10': index !== pageContext.images.length - 1\n                    })}\n                    src={value}\n                    alt={pageContext.name}\n                />\n            ))\n        }\n    }\n\n    const getColor = () => {\n        switch (pageContext.type.toUpperCase()) {\n            case 'ACADEMIC':\n                return 'blue'\n            case 'SPORT':\n                return 'orange'\n            default:\n                return 'gray'\n        }\n    }\n\n    const componentDecorator = (href, text, key) => (\n        <a className=\"text-cu\" href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\n            {text}\n        </a>\n    )\n\n    const mainColor = getColor()\n\n    return (\n        <Layout>\n            <SEO title={pageContext.name} />\n            <NavigationBar pageTitle={pageContext.name} />\n            <section className=\"bg-white\">\n                <View className=\"py-20\">\n                    <SectionTitle\n                        en={pageContext.type.toUpperCase()}\n                        th={pageContext.name}\n                        icon={<ChulaEngineeringIcon />}\n                        color={mainColor}\n                    />\n                    <p className=\"font-headline text-lg leading-loose text-gray-700\">\n                        <Linkify componentDecorator={componentDecorator}>\n                            {pageContext.description}\n                        </Linkify>\n                    </p>\n                </View>\n            </section>\n            <section className=\"bg-gray-100 py-20\">\n                <ImageView>{renderImages()}</ImageView>\n            </section>\n        </Layout>\n    )\n}\n\nexport default PerClubView\n","import React from 'react'\n\nconst View = ({ children, className }) => (\n    <div className=\"container\">\n        <div className=\"mx-8 flex justify-center\">\n            <div className=\"w-full md:w-3/4 lg:w-3/5 xl:w-1/2\">\n                <div className={className}>{children}</div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default View\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React, { Fragment } from 'react'\n\nconst SectionTitle = ({ en, th, icon, color }) => {\n    return (\n        <Fragment>\n            <div className=\"flex flex-row\">\n                <div\n                    className={`icon flex justify-center items-center text-white bg-red-600 bg-white shadow-xl rounded-full mr-5`}\n                    style={{ width: '40px', height: '40px' }}>\n                    {icon}\n                </div>\n                <div className=\"flex flex-col\">\n                    <span\n                        className={`font-headline text-sm tracking-widest leading-none mb-1 text-red-600`}>\n                        {en}\n                    </span>\n                    <span className=\"font-headline text-3xl leading-none mb-10\">{th}</span>\n                    <div\n                        className={`flex border-b border-red-600 mb-10`}\n                        style={{ width: '50px' }}\n                    />\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default SectionTitle\n","import React from 'react'\n\nconst ChulaEngineeringIcon = () => (\n    <svg width=\"1.25em\" height=\"1.25em\" viewBox=\"0 0 244 141\" version=\"1.1\">\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g id=\"chula-engineering-all-white\" fill=\"#FFFFFF\">\n                <g id=\"Group\">\n                    <g id=\"Path\">\n                        <g>\n                            <polygon points=\"54.2 23 22.5 23.1 70.1 70.7 22.4 118.5 54.2 118.5 101.9 70.5\" />\n                            <polygon points=\"107.3 112.9 95.9 124.1 16.7 124 0 140.9 110.8 140.9 110.8 112.9\" />\n                            <polygon points=\"107.3 28.2 95.9 16.9 16.7 17 0 0.1 110.8 0.1 110.8 28.1\" />\n                        </g>\n                        <polygon points=\"220.9 93 144.3 4.3 143.4 3.2 133.2 3.2 133.3 54.1 149.7 70.5 133.2 87 133.2 137.7 155.6 137.7 155.6 48 233.9 137.7 243.4 137.7 243.4 3.2 220.9 3.2\" />\n                    </g>\n                </g>\n            </g>\n        </g>\n    </svg>\n)\n\nexport default ChulaEngineeringIcon\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport View from './view'\n\nconst Footer = () => (\n    <footer className=\"bg-white\">\n        <View className=\"py-10\">\n            <p className=\"text-center font-sans text-2xs uppercase tracking-widest text-gray-600\">\n                <span className=\"border-b pb-1 border-white\">\n                    &copy; {new Date().getFullYear()} CU First Date\n                </span>\n                <span className=\"opacity-50 border-b pb-1 border-white\">\n                    {' '}\n                    &middot;{' '}\n                    <a\n                        href=\"https://github.com/fivechjr\"\n                        className=\"border-b pb-1 text-cu border-cu\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\">\n                        Patcharapat Chaijaroen\n                    </a>\n                </span>\n            </p>\n        </View>\n    </footer>\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport '../resources/tailwind.css'\nimport Footer from '../components/common/footer'\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <main className=\"antialiased font-sans\">{children}</main>\n                <Footer />\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired\n}\n\nexport default Layout\n"],"sourceRoot":""}